apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ template "collection-backups.fullname" . }}
  namespace: {{ template "collection-backups.namespace" . }}
  labels:
    {{- include "collection-backups.labels" . | nindent 4 }}
    {{- with .Values.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}

  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  schedule: {{ .Values.schedule | default "0 0 * * *" | quote }}
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 3
      template:
        metadata:
          labels:
            {{- include "collection-backups.labels" . | nindent 12 }}
        spec:
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          containers:
            - name: backup
              image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              env:
                - name: "BACKUP_ZK_URL"
                  value: {{ template "collection-backups.zookeeperHost" . }}
                - name: "BACKUP_REPO_NAME"
                  value: gcs_backup
                - name: "BACKUP_BUCKET_NAME"
                  value: {{ required "A valid .Values.bucketName entry required!" .Values.bucketName }}
                - name: "BACKUP_BUCKET_ROOT_FOLDER"
                  value: environments
                - name: "BACKUP_GCS_CREDENTIALS_PATH"
                  value: /etc/gcs/cloud
                - name: "BACKUP_CUSTOMER_ID"
                  value: {{ template "collection-backups.customerId" . }}
                - name: "BACKUP_EXCLUDED_COLLECTIONS"
                  value: "system_logs"
                - name: "BACKUP_MAX_BACKUP_POINTS"
                  value: {{ quote .Values.maxBackupPoints }}
              volumeMounts:
                - name: gcs-credentials
                  mountPath: "/etc/gcs"
                  readOnly: true
          restartPolicy: OnFailure
          volumes:
            - name: gcs-credentials
              secret:
                secretName: {{ template "collection-backups.secretName" . }}
